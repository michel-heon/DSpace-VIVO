openapi: "3.0.2"
info:
  version: 1.1.0
  title: DSpace-VIVO EXchange Data Schema (DVExDS)
  description: |-
    This is the "DSpace-VIVO EXchange Data Schema (DVExDS)" based on the OpenAPI 3.0.2 specification.
    You can find out more about Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
    Some useful links:
    - [DSpace-VIVO - Integration project of DSpace metadata with VIVO](https://github.com/vivo-community/DSpace-VIVO) 
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    name: Michel HÃ©on PhD
    email: vivo@uqam.ca
    url: https://github.com/vivo-community/DSpace-VIVO
  license:
    name: BSD 3-Clause License
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /api
tags:
- name: "DSpace"
  description: "Operations about a DSpace metadata convertion to VIVO"
paths:
  /dspace/item:
    post:
      tags:
      - DSpace
      summary: "Translate DSpace-Item metadata to VIVO"
      description: ""
      operationId: "parseItem"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/turtle:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /dspace/collection:
    post:
      deprecated: true
      tags:
      - DSpace
      summary: "Translate DSpace-Collection metadata to VIVO"
      description: ""
      operationId: "parseCollection"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      responses:
        200:
          description:  successful operation
          content:
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/turtle:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Collection:
      type: object
      required:
        - id
        - uri
        - url
      properties:
        dspaceType:
          type: string
          readOnly: true
          default: collection
        id:
          type: string
          example: 123456789/2
        uri:
          type: string
          example: http://localhost:4000/handle/123456789/2
        url:
          type: string
          example: http://localhost:4000/items/948d534a-e1d9-41b2-bb23-1ae2fe9cff4f
        hasItem: 
          type: array
          items:
            $ref: '#/components/schemas/Item'
        isPartOfCommunityID: 
          type: array
          items:
            type: string
        listOfStatements:
          type: array
          items:
              $ref: '#/components/schemas/Statement'
        listOfStatementLiterals:
          type: array
          items:
              $ref: '#/components/schemas/StatementLiteral'
    Community:
      type: object
      required:
        - id
        - uri
        - url
      properties:
        dspaceType:
          type: string
          readOnly: true
          default: community
        id:
          type: string
          example: 123456789/1
        uri:
          type: string
          example: "http://localhost:4000/handle/123456789/1"        
        url:
          type: string
          example: "http://localhost:4000/communities/b278a9dd-9c63-4864-9c6e-0a6caa8ff459"        
        hasCollection:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
          example: 123456789_2
        hasSubCommunity:
          type: array
          items:
            $ref: '#/components/schemas/Community'
        isSubcommunityOfID:
          type: array
          items:
            type: string
        isPartOfRepositoryID:
          items:
            type: string
        listOfStatements:
          type: array
          items:
              $ref: '#/components/schemas/Statement'
        listOfStatementLiterals:
          type: array
          items:
              $ref: '#/components/schemas/StatementLiteral'
    Repository:
      type: object
      required:
        - id
        - uri
      properties:
        dspaceType:
          type: string
          readOnly: true
          default: repository
        id:
          type: string
          example: 123456789_0
        uri:
          type: string
          example: "http://localhost:4000/handle/123456789/0"    
        hasCommunity:
          type: array
          items:
            $ref: '#/components/schemas/Community'
        listOfStatements:
          type: array
          items:
              $ref: '#/components/schemas/Statement'
        listOfStatementLiterals:
          type: array
          items:
              $ref: '#/components/schemas/StatementLiteral'
    Item: 
      type: object
      required:
        - id
        - uri
        - url
        - dspaceBitstreamURL
        - dspaceIsPartOfCollection
      properties:
        dspaceType:
          type: string
          readOnly: true
          default: item
        id:
          type: string
          example: 123456789_68
        uri:
          type: string
          example: http://dspacevivo.vivoweb.org/individual/123456789_68
        url:
          type: string
          example: http://localhost:8080/server/rdf/resource/123456789/68
        dspaceBitstreamURLs:
          items:
            type: string
            example: http://localhost:4000/bitstream/123456789/68/1/bubble-chart-line.png
        dspaceIsPartOfCollectionID:
          items:
            type: string
            example: 123456789_62
        listOfStatements:
          type: array
          items:
              $ref: '#/components/schemas/Statement'
        listOfStatementLiterals:
          type: array
          items:
              $ref: '#/components/schemas/StatementLiteral'
    Statement:
      type: object
      required:
        - subjectUri
        - predicateUri
        - objectUri
      properties:
        dspaceType:
          type: string
          readOnly: true
          default: statement
        subjectUri:
          type: string
          example: http://dspacevivo.vivoweb.org/individual/123456789_62
        predicateUri:
          type: string
          example: dcterms:isPartOf
        objectUri:
          type: string
          example: http://dspacevivo.vivoweb.org/individual/123456789_68
    StatementLiteral:
      type: object
      required:
        - subjectUri
        - predicateUri
        - objectLiteral
        - literalType
      properties:
        dspaceType:
          type: string
          readOnly: true
          default: statementLiteral
        subjectUri:
          type: string
          example: http://dspacevivo.vivoweb.org/individual/123456789_68
        predicateUri:
          type: string
          example: dcterms:title
        objectLiteral:
          type: string
          example: "some title"
        literalType:
          type: string
          example: "xsd:string"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
